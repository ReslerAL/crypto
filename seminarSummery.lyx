#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass scrbook
\begin_preamble
% DO NOT ALTER THIS PREAMBLE!!!
%
% This preamble is designed to ensure that the User's Guide prints
% out as advertised. If you mess with this preamble,
% parts of the User's Guide may not print out as expected.  If you
% have problems LaTeXing this file, please contact 
% the documentation team
% email: lyx-docs@lists.lyx.org

\usepackage{ifpdf} % part of the hyperref bundle
\ifpdf % if pdflatex is used

 % set fonts for nicer pdf view
 \IfFileExists{lmodern.sty}{\usepackage{lmodern}}{}

\fi % end if pdflatex is used

% for correct jump positions whe clicking on a link to a float
\usepackage[figure]{hypcap}

% the pages of the TOC is numbered roman
% and a pdf-bookmark for the TOC is added
\let\myTOC\tableofcontents
\renewcommand\tableofcontents{%
  \frontmatter
  \pdfbookmark[1]{\contentsname}{}
  \myTOC
  \mainmatter }

% macro for italic page numbers in the index
\newcommand{\IndexDef}[1]{\textit{#1}}

% for customized page headers/footers
% only needed because they are only used in one section of the document
\usepackage{fancyhdr}
% change header rule width
\renewcommand{\headrulewidth}{2pt}

% used to have extra space in table cells
\@ifundefined{extrarowheight}
 {\usepackage{array}}{}
\setlength{\extrarowheight}{2pt}

% workaround for a makeindex bug,
% see sec. "Index Entry Order"
% only uncomment this when you are using makindex
%\let\OrgIndex\index 
%\renewcommand*{\index}[1]{\OrgIndex{#1}}
\end_preamble
\options refpage,intoc,bibliography=totoc,index=totoc,BCOR7.5mm,captions=tableheading
\use_default_options false
\begin_modules
customHeadersFooters
enumitem
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command bibtex
\index_command default
\float_placement h
\paperfontsize 12
\spacing single
\use_hyperref true
\pdf_title "The LyX User's Guide"
\pdf_author "LyX Team"
\pdf_subject "LyX"
\pdf_keywords "LyX"
\pdf_bookmarks true
\pdf_bookmarksnumbered true
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle false
\pdf_quoted_options "linkcolor=black, citecolor=black, urlcolor=blue, filecolor=blue, pdfpagelayout=OneColumn, pdfnewwindow=true, pdfstartview=XYZ, plainpages=false"
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 0
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 0
\use_package mhchem 1
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\notefontcolor #0000ff
\branch Question
\selected 1
\filename_suffix 0
\color #00ff00
\end_branch
\branch Answer
\selected 0
\filename_suffix 0
\color #aa55ff
\end_branch
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 2
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict true
\end_header

\begin_body

\begin_layout Title
Zero-Knowledge from Secure Multiparty Computation
\end_layout

\begin_layout Author
seminar talk by Alon Resler
\end_layout

\begin_layout Section*
1.
 Abstract
\end_layout

\begin_layout Standard
We show today a construction of Zero-Knowledge proof system 
\begin_inset Formula $\Pi_{R}$
\end_inset

 for 
\begin_inset Formula $NP$
\end_inset

 relation 
\begin_inset Formula $R(x,w)$
\end_inset

 which make a 
\emph on
black-box use 
\emph default
of an 
\begin_inset Formula $MPC$
\end_inset

 protocol 
\begin_inset Formula $\Pi_{f}$
\end_inset

 for a related multi-party functionality 
\begin_inset Formula $f$
\end_inset

, along with commitment protocol.
 
\end_layout

\begin_layout Section*
2.
 Preliminaries
\end_layout

\begin_layout Standard
Before we start we need a fast reminder of basic definition from Cryptography
 course
\end_layout

\begin_layout Subsection*
Zero-Knowledge Proof
\end_layout

\begin_layout Standard
Interactive Protocol 
\begin_inset Formula $(V,P)$
\end_inset

where 
\begin_inset Formula $V$
\end_inset

 is 
\begin_inset Formula $PPT$
\end_inset

 is a zero-knowledge proof for the relation 
\begin_inset Formula $R(x,w)$
\end_inset

 if it satisfies the following conditions:
\end_layout

\begin_layout Itemize
Completeness: If 
\begin_inset Formula $R(x,w)=1$
\end_inset

 and both players are honest the verifier accept (with probability one)
\end_layout

\begin_layout Itemize
Soundness: 
\begin_inset Formula $\forall$
\end_inset

 unbounded prover 
\begin_inset Formula $P^{*}$
\end_inset

 there is a negligible function 
\begin_inset Formula $\epsilon(\cdot)$
\end_inset

 such that 
\begin_inset Formula $\forall x\notin\mathbb{\mathcal{L}}$
\end_inset

 
\begin_inset Formula $V$
\end_inset

 rejects except to negligible probability 
\begin_inset Formula $\epsilon(|x|)$
\end_inset


\end_layout

\begin_layout Itemize
Zero-Knowledge: 
\begin_inset Formula $\forall PPT\;verifier\;V^{*}$
\end_inset

 
\begin_inset Formula $\exists$
\end_inset

 PPT simulator 
\begin_inset Formula $M^{*}$
\end_inset

such that the view of of 
\begin_inset Formula $V^{*}$
\end_inset

when interacting with P on input 
\begin_inset Formula $(x,w)$
\end_inset

 for which 
\begin_inset Formula $R(x,w)=1$
\end_inset

 is computational indistinguishably from 
\begin_inset Formula $M^{*}(x).$
\end_inset

 Notation: 
\begin_inset Formula $<(P,V^{*})(x)>_{V^{*}}\approx_{C}M^{*}(x)$
\end_inset


\end_layout

\begin_layout Standard
Notes: in this definition we use perfect completeness and negligible soundness.
 In Iftach's definition we used 
\begin_inset Formula $\frac{2}{3}\;and\;\frac{1}{3}$
\end_inset

.
 The negligible soundness can be achieved easily by repetition but the perfect
 completeness is not so trivial, it is actually result of a paper by ...
\end_layout

\begin_layout Subsection*
Commitment Scheme
\end_layout

\begin_layout Standard
An efficient two-stage protocol 
\begin_inset Formula $(S,R)$
\end_inset

:
\end_layout

\begin_layout Itemize

\series bold
Commit: 
\series default
the sender has private input 
\begin_inset Formula $\sigma\in\{0,1\}^{*}$
\end_inset

and a common input 
\begin_inset Formula $1^{n}$
\end_inset

.
 The commitment stage result in a common input 
\begin_inset Formula $c$
\end_inset

 - the commitment 
\begin_inset Formula $S$
\end_inset

 sends to 
\begin_inset Formula $R$
\end_inset

 and private input of 
\begin_inset Formula $S$
\end_inset

, 
\begin_inset Formula $d$
\end_inset

 - the decommitment.
\end_layout

\begin_layout Itemize

\series bold
Reveal: 
\begin_inset Formula $S$
\end_inset

 
\series default
sends the pair 
\begin_inset Formula $(d,\sigma)$
\end_inset

 to 
\begin_inset Formula $R$
\end_inset

 and 
\begin_inset Formula $R$
\end_inset

 either accepts or rejects.
\end_layout

\begin_layout Paragraph

\series bold
Completeness: 
\end_layout

\begin_layout Standard

\series bold
\begin_inset Formula $R$
\end_inset

 
\series default
always accepts in honest execution.
\end_layout

\begin_layout Paragraph
Hiding (computational):
\end_layout

\begin_layout Standard
In the commit stage 
\begin_inset Formula $\forall R^{*},m\in\mathbb{N}$
\end_inset

 and 
\begin_inset Formula $\sigma,\sigma'\in\{0,1\}^{m}$
\end_inset

:
\begin_inset Formula 
\[
\{View_{R^{*}}(S(\sigma),R^{*})(1^{n})\}_{n\in\mathbb{N}}\approx_{C}\{View_{R^{*}}(S(\sigma'),R^{*})(1^{n})\}_{n\in\mathbb{N}}
\]

\end_inset


\end_layout

\begin_layout Standard
Note: for 
\emph on
statistical binding
\emph default
 and 
\emph on
perfect binding 
\emph default
change to statistical close and identical distributions.
 
\end_layout

\begin_layout Paragraph
Binding:
\end_layout

\begin_layout Standard
A cheater sender 
\begin_inset Formula $S^{*}$
\end_inset

success in the following game with negligible probability:
\end_layout

\begin_layout Standard
On security parameter 
\begin_inset Formula $1^{n}$
\end_inset

, 
\begin_inset Formula $S^{*}$
\end_inset

 interacts with 
\begin_inset Formula $R$
\end_inset

 in the commit stage resulting in commitment 
\begin_inset Formula $c$
\end_inset

 and then output two pairs 
\begin_inset Formula $(d,\sigma),(d',\sigma')$
\end_inset

 with 
\begin_inset Formula $\sigma\neq\sigma'$
\end_inset

 such that 
\begin_inset Formula $R(c,d,\sigma)=R(c,d',\sigma')=Accept$
\end_inset

.
\end_layout

\begin_layout Paragraph*
note:
\end_layout

\begin_layout Standard
Commitment can be build from OWP
\end_layout

\begin_layout Subsubsection*
Commitment-hybrid Model
\end_layout

\begin_layout Standard
Today we will assume we have an idealize implementation commitment scheme,
 where a string can be committed to by sending it to a trusted third party,
 and later opened by having the committer instruct the trusted party to
 reveal the commitment.
 Alternatively, one can think of a direct physical implementation in which
 the committed string is sent in locked box and the decommitment is done
 by sending the key to this box.
 The idea is first to analyze it with the ideal commitment which is easier
 and enable us to focus on the new idea and later on 
\begin_inset Quotes eld
\end_inset

compile
\begin_inset Quotes erd
\end_inset

 it to real commitment scheme.
 We will avoid in this talk from the compilation part.
 You can find it in the article.
 
\end_layout

\begin_layout Subsection*
Correctness:
\end_layout

\begin_layout Standard
We say that protocol 
\begin_inset Formula $\Pi$
\end_inset

 realize a deterministic function n-party functionality 
\begin_inset Formula $f(x,w_{1},...,w_{n})$
\end_inset

 with perfect/statistical correctness if for all inputs 
\begin_inset Formula $x,w_{1},...,w_{n}$
\end_inset

 the probability that the output of some player is different then 
\begin_inset Formula $f$
\end_inset

 is zero/negligible (the probability is on the random tapes)
\end_layout

\begin_layout Subsection*
t-Privacy:
\end_layout

\begin_layout Standard
let 
\begin_inset Formula $1\leq t\leq n$
\end_inset

.
 We say that 
\begin_inset Formula $\Pi$
\end_inset

 realize 
\begin_inset Formula $f$
\end_inset

 with perfect 
\emph on
t-privacy
\emph default
 if there is a PPT simulator 
\begin_inset Formula $Sim$
\end_inset

 such that for any inputs 
\begin_inset Formula $x,w_{1},...,w_{n}$
\end_inset

and any set of corrupted players 
\begin_inset Formula $T\subseteq[n]$
\end_inset

, where 
\begin_inset Formula $T\leq t$
\end_inset

, the joint view 
\begin_inset Formula $View_{T}(x,w_{1},...,w_{n})$
\end_inset

 of players in 
\begin_inset Formula $T$
\end_inset

 is distributed identically to 
\begin_inset Formula $Sim(T,x,(w_{i})_{i\in T},f_{T}(x,w_{1},...,w_{n}))$
\end_inset

.
 The relaxation to statistical or computational is the same as always.
 
\end_layout

\begin_layout Subsection*
t-Robustness:
\end_layout

\begin_layout Standard
We say that 
\begin_inset Formula $\Pi$
\end_inset

 realizes 
\begin_inset Formula $f$
\end_inset

 with perfect/statistical 
\emph on
t-Robustness 
\emph default
if it is perfectly/statistically correct in the present of of a semi-honest
 adversary and furthermore for any computationally unbounded malicious adversary
 corrupting a set 
\begin_inset Formula $T$
\end_inset

 of at most 
\begin_inset Formula $t$
\end_inset

 players, and for any inputs 
\begin_inset Formula $(x,w_{1},...,w_{n}),$
\end_inset

 the following robustness property holds:
\end_layout

\begin_layout Standard
If there is no 
\begin_inset Formula $(w'_{1},...,w'_{n})$
\end_inset

 such that 
\begin_inset Formula $f(x,w'_{1},...,w'_{n})=1$
\end_inset

 then the probability that some uncorrupted player output 1 in an execution
 of 
\begin_inset Formula $\Pi$
\end_inset

 in which the input of the honest players consistent with 
\begin_inset Formula $(x,w_{1},...,w_{n})$
\end_inset

 is zero/negligible.
 
\end_layout

\begin_layout Subsection*
Consistent Views
\end_layout

\begin_layout Standard
We say that a pair of views 
\begin_inset Formula $V_{i},V_{j}$
\end_inset

 are consistent (with respect to the protocol 
\begin_inset Formula $\Pi$
\end_inset

 and input 
\begin_inset Formula $x$
\end_inset

) if the outgoing messages implicit in 
\begin_inset Formula $V_{i},x$
\end_inset

 are identical to the incoming messages reported in 
\begin_inset Formula $V_{j}$
\end_inset

 and vice versa.
\end_layout

\begin_layout Subsubsection*
Lemma (Local vs.
 global consistency)
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $\Pi$
\end_inset

 be an n-party protocol and 
\begin_inset Formula $x$
\end_inset

 its input.
 Let 
\begin_inset Formula $V_{1},V_{2},...,V_{n}$
\end_inset

 be n views (possibly incorrect).
 Then all pairs 
\begin_inset Formula $V_{i},V_{j}$
\end_inset

 are consistent with respect to 
\begin_inset Formula $\Pi$
\end_inset

 and 
\begin_inset Formula $x$
\end_inset

 if and only if there exist an honest execution of 
\begin_inset Formula $\Pi$
\end_inset

 with public input 
\begin_inset Formula $x$
\end_inset

 (and some choice of private input 
\begin_inset Formula $w_{i}$
\end_inset

 and random inputs 
\begin_inset Formula $r_{i}$
\end_inset

) in which 
\begin_inset Formula $V_{i}$
\end_inset

 is the view of 
\begin_inset Formula $P_{i}\:\forall i$
\end_inset


\end_layout

\begin_layout Paragraph*
proof:
\end_layout

\begin_layout Itemize
\begin_inset Formula $\Longleftarrow:$
\end_inset

 by definition.
 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\Longrightarrow:$
\end_inset

 let 
\begin_inset Formula $V_{1},...,V_{n}$
\end_inset

 be pairwise consistent views and let 
\begin_inset Formula $w_{i},r_{i}$
\end_inset

 be be the private input and random input reported in view 
\begin_inset Formula $V_{i}$
\end_inset

.
 By the pairwise consistency of the views we get by induction on the number
 of rounds 
\begin_inset Formula $d$
\end_inset

, that the actual view of every player 
\begin_inset Formula $P_{i}$
\end_inset

 after 
\begin_inset Formula $d$
\end_inset

 rounds when 
\begin_inset Formula $\Pi$
\end_inset

 is invoke on 
\begin_inset Formula $(x,(w_{1},r_{1}),...,(w_{n},r_{n}))$
\end_inset

 is the same as the view of 
\begin_inset Formula $P_{i}$
\end_inset

 in the first 
\begin_inset Formula $d$
\end_inset

 rounds reported in 
\begin_inset Formula $V_{i}$
\end_inset

.
 It follow that the 
\begin_inset Formula $n$
\end_inset

 views 
\begin_inset Formula $V_{1},...,V_{n}$
\end_inset

 are consistent with the full execution of 
\begin_inset Formula $\Pi.$
\end_inset

 
\end_layout

\begin_layout Section*
3.
 The protocol (in the commitment-hybrid model):
\end_layout

\begin_layout Itemize
Let 
\begin_inset Formula $\mathcal{L\in NP}$
\end_inset

 b and 
\begin_inset Formula $R(x,w)$
\end_inset

 be a corresponding 
\begin_inset Formula $NP$
\end_inset

 relation.
 
\end_layout

\begin_layout Itemize
Let 
\begin_inset Formula $f$
\end_inset

 be the following function:
\begin_inset Formula 
\[
f(x,w_{1},...,w_{n})=R(x,w_{1}\oplus...\oplus w_{n})
\]

\end_inset

 we view 
\begin_inset Formula $f$
\end_inset

 as an n-party functionality where 
\begin_inset Formula $x$
\end_inset

 is the public input known to all n-players and 
\begin_inset Formula $w_{i}$
\end_inset

 is a private input of player 
\begin_inset Formula $P_{i}$
\end_inset

 and the output is received by all players.
\end_layout

\begin_layout Itemize
let 
\begin_inset Formula $\Pi_{f}$
\end_inset

 be an n-party protocol which realize (compute) 
\begin_inset Formula $f$
\end_inset

 (i.e.
 all player output 
\begin_inset Formula $f$
\end_inset

 with probability 1 - the probability is taken on the random tapes) with
 
\emph on
perfect 
\emph default
correctness and either perfect, statistical or computational 2-privecy (in
 the semi-honest model).
\end_layout

\begin_layout Itemize
Let 
\begin_inset Formula $Com$
\end_inset

 be an ideal commitment scheme - you can think of it like there is trusted
 third party that collect the string from the sender and send it to the
 receiver later
\end_layout

\begin_layout Standard
We now describe zero knowledge protocol where the verifier have a black-box
 access to the MPC protocol 
\begin_inset Formula $\Pi_{f}$
\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout

\series bold
Zero-Knowledge proof 
\begin_inset Formula $\Pi_{R}$
\end_inset

 in the commitment-hybrid model
\end_layout

\begin_layout Enumerate
The prover picks at random 
\begin_inset Formula $w_{1},...,w_{n}\in\{0,1\}^{m}$
\end_inset

such that 
\begin_inset Formula $w_{1}\oplus...\oplus w_{n}=w$
\end_inset

.
 Then she emulate 
\begin_inset Quotes eld
\end_inset

in her head
\begin_inset Quotes erd
\end_inset

 the execution of 
\begin_inset Formula $\Pi_{f}$
\end_inset

 on the input 
\begin_inset Formula $(x,w_{1},...,w_{n})$
\end_inset

 (this involved also choosing the randomness to the n players of the protocol).
 Base on this execution the prover prepares the views 
\begin_inset Formula $V_{1},...,V_{n}$
\end_inset

 of the n players.
 She commit all of Them.
\end_layout

\begin_layout Enumerate
Verifier picks at random 
\begin_inset Formula $i,j\in[n]$
\end_inset

 and sends them to the prover
\end_layout

\begin_layout Enumerate
Prover 
\begin_inset Quotes eld
\end_inset

opens
\begin_inset Quotes erd
\end_inset

 the commitments of 
\begin_inset Formula $V_{i},V_{j}$
\end_inset

.
\end_layout

\begin_layout Enumerate
Verifier accepts if and only if:
\end_layout

\begin_deeper
\begin_layout Enumerate
the prover indeed successfully opened the requested views
\end_layout

\begin_layout Enumerate
the outputs of both 
\begin_inset Formula $P_{i}$
\end_inset

 and 
\begin_inset Formula $P_{j}$
\end_inset

 (which are determined by the views) are 1
\end_layout

\begin_layout Enumerate
the two opened views are 
\emph on
consistent
\emph default
 with each other
\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Paragraph*
Claim 1
\end_layout

\begin_layout Standard
under the assumptions above on 
\begin_inset Formula $\Pi_{f}$
\end_inset

 the above protocol is a zero knowledge proof with perfect completeness
 and soundness error 
\begin_inset Formula $\epsilon\leq1-\frac{1}{\binom{n}{2}}$
\end_inset


\end_layout

\begin_layout Paragraph*
proof:
\end_layout

\begin_layout Paragraph*
Completeness:
\end_layout

\begin_layout Standard
If 
\begin_inset Formula $(x,w)\in R$
\end_inset

 the the prover is honest then since 
\begin_inset Formula $w=w_{1}\oplus...\oplus w_{n}$
\end_inset

 and 
\begin_inset Formula $\Pi_{f}$
\end_inset

 is perfectly correct, the views 
\begin_inset Formula $V_{1},...,V_{n}$
\end_inset

always have output 1.
 Since these views are produced by an honest execution of the protocol,
 they consistent with each other.
 
\end_layout

\begin_layout Paragraph*
Soundness:
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $x\notin\mathcal{L}\Longrightarrow\forall w\:R(x,w)=0$
\end_inset

 and let 
\begin_inset Formula $P^{*}$
\end_inset

 be a some prover.
 Hence by the perfect correctness of 
\begin_inset Formula $\Pi_{f}$
\end_inset

, for all choices of 
\begin_inset Formula $w_{1},...,w_{n}$
\end_inset

 and all choices of random inputs 
\begin_inset Formula $r_{1},...,r_{n}$
\end_inset

, the output of all 
\emph on
n 
\emph default
players in an honest execution of the protocol must be 0.
 Therefore considering the 
\emph on
n 
\emph default
views committed by the prover:
\end_layout

\begin_layout Itemize
if in all the views the output is 0 the verifier will always reject
\end_layout

\begin_layout Itemize
otherwise, by the lemma, there exist at least two views which are inconsistent
 with respect to 
\begin_inset Formula $\Pi_{f}$
\end_inset

, and than the verifier will reject if she choose inconsistent views, therefore
 it will reject with probability at least 
\begin_inset Formula $\frac{1}{\binom{n}{2}}$
\end_inset


\end_layout

\begin_layout Paragraph*
Zero-Knowledge:
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $V^{*}$
\end_inset

 be a malicious verifier.
 We describe simulator 
\begin_inset Formula $M$
\end_inset

 that use 
\begin_inset Formula $V*$
\end_inset

 and the MPC simulator 
\begin_inset Formula $S$
\end_inset

 as a black box.
 We start with the case where 
\begin_inset Formula $\Pi_{f}$
\end_inset

 is 
\emph on
perfectly 2-privacy.
 
\emph default
The Simulator on input 
\begin_inset Formula $x$
\end_inset

:
\end_layout

\begin_layout Enumerate
Run 
\begin_inset Formula $V*$
\end_inset

on input 
\begin_inset Formula $x$
\end_inset

.
 Let 
\begin_inset Formula $i,j$
\end_inset

 be the pair of indices sent by 
\begin_inset Formula $V^{*}$
\end_inset

 is Step 2 of 
\begin_inset Formula $\Pi_{R}$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $M$
\end_inset

 simulate the two views 
\begin_inset Formula $V_{i},V_{j}$
\end_inset

, by picking random 
\begin_inset Formula $w_{i},w_{j}$
\end_inset

 and running 
\begin_inset Formula $S(T=\{i,j\},x,(w_{i},w_{j}),1)$
\end_inset


\end_layout

\begin_layout Standard
(Note: the prover's communication in step 3 are trivial to simulate in the
 commitment-hybrid model).
 We prove that the above simulator is perfect.
 Let 
\begin_inset Formula $(x,w)$
\end_inset

 such that 
\begin_inset Formula $R(x,w)=1$
\end_inset

.
 
\end_layout

\begin_layout Itemize
the randomness of 
\begin_inset Formula $V^{*}$
\end_inset

 chosen by the simulator 
\begin_inset Formula $M$
\end_inset

 is randomly distributed.
 Its enough to look of deterministic 
\begin_inset Formula $V^{*}$
\end_inset

after its randomness is set (to show that for each 
\begin_inset Formula $r$
\end_inset

 the view is the same).
 Set 
\begin_inset Formula $r^{*}$
\end_inset

 to be 
\begin_inset Formula $V^{*}$
\end_inset

's randomness.
\end_layout

\begin_layout Itemize
Let 
\begin_inset Formula $i,j$
\end_inset

 be the verfier's selections determined by 
\begin_inset Formula $r^{*}$
\end_inset

.
 In the real execution of 
\begin_inset Formula $\Pi_{R}$
\end_inset

 on 
\begin_inset Formula $(x,w)$
\end_inset

, the inputs 
\begin_inset Formula $w_{1},...,w_{n}$
\end_inset

to 
\begin_inset Formula $\Pi_{f}$
\end_inset

 (picked by the prover) are such that 
\begin_inset Formula $w_{i}$
\end_inset

 and 
\begin_inset Formula $w_{j}$
\end_inset

 are uniform and independent - same as in the simulator (conditioned on
 
\begin_inset Formula $r^{*}$
\end_inset

)
\end_layout

\begin_layout Itemize
Remain to show that condition on each choices of 
\begin_inset Formula $r^{*},w_{i},w_{j}$
\end_inset

 the distribution of the views 
\begin_inset Formula $(V_{i},V_{j})$
\end_inset

 received from the prover in step 3 of 
\begin_inset Formula $\Pi_{R}$
\end_inset

 is identical to the distribution of 
\begin_inset Formula $S(T=\{i,j\},x,(w_{i},w_{j}),1)$
\end_inset

.
 Indeed, the 2-pricacy of 
\begin_inset Formula $S$
\end_inset

 guarantee that the following holds even when further conditioned on every
 possible choices of 
\begin_inset Formula $w_{1},...,w_{n}$
\end_inset

 which consistent with 
\begin_inset Formula $w_{i},w_{j},w$
\end_inset

.
\end_layout

\begin_layout Standard
Finally, if 
\begin_inset Formula $\Pi_{f}$
\end_inset

is only statistical or computational 2-private, the quality of 
\begin_inset Formula $M$
\end_inset

 change accordingly.
 
\end_layout

\begin_layout Paragraph*
claim 2
\end_layout

\begin_layout Standard
Under the same assumptions as in claim 1 but using a 
\emph on
statistically binding commitment scheme 
\emph default
Com then the protocol 
\begin_inset Formula $\Pi_{R}^{Com}$
\end_inset

 is a zero knowledge with soundness error 
\begin_inset Formula $\epsilon(k)\leq1-\frac{1}{\binom{n}{2}}+\delta(k)$
\end_inset

 where 
\begin_inset Formula $k$
\end_inset

 is the security parameter for Com and 
\begin_inset Formula $\delta(\cdot)$
\end_inset

 is some negligible function.
 
\end_layout

\begin_layout Paragraph*
proof: 
\end_layout

\begin_layout Standard
the proof is similar to the analysis of the GMW zero knowledge proof for
 3-Colorability
\begin_inset CommandInset citation
LatexCommand cite
key "key-1"

\end_inset

 and therefore omitted.
 
\end_layout

\begin_layout Paragraph*
Additional remarks:
\end_layout

\begin_layout Enumerate
If 
\begin_inset Formula $\Pi_{f}$
\end_inset

 is now perfectly correct, a cheating prover may violate the soundness of
 
\begin_inset Formula $\Pi_{R}$
\end_inset

: on 
\begin_inset Formula $x\notin L$
\end_inset

, she picks 
\begin_inset Formula $w_{1},...,w_{n}$
\end_inset

 and 
\begin_inset Formula $r_{1},...,r_{n}$
\end_inset

 on which the protocol incorrectly output 1, hereby making the verifier
 incorrectly accept (no matter on the choice of 
\begin_inset Formula $i,j$
\end_inset

 )
\end_layout

\begin_layout Enumerate
We will later interested in minimizing the amount of communication in the
 zero knowledge protocol.
 Lets analyze the communication complexity of 
\begin_inset Formula $\Pi_{R}$
\end_inset

: Implementing a statistically binding commitment to a string 
\begin_inset Formula $m$
\end_inset

 of length 
\begin_inset Formula $l$
\end_inset

 cost 
\begin_inset Formula $l+poly(k)$
\end_inset

 bits of communication, where 
\begin_inset Formula $k$
\end_inset

 is the security parameter.
 This can be done by first committing to random seed 
\begin_inset Formula $s\in\{0,1)^{k}$
\end_inset

 to a pseudorandom generator 
\emph on
G, 
\emph default
and then sending 
\begin_inset Formula $m\oplus G(s)$
\end_inset

.
 Note that the total length of the views in 
\begin_inset Formula $\Pi_{R}$
\end_inset

 is 
\begin_inset Formula $O(|w|)$
\end_inset

 plus the communication and randomness complexity of 
\begin_inset Formula $\Pi_{f}$
\end_inset

 .
 
\end_layout

\begin_layout Subsubsection*
Which MPC do we use?
\end_layout

\begin_layout Standard
We can use the GMW protocol we saw or the BGW.
 We will want to choose protocol which is efficient.
\end_layout

\begin_layout Subsection*
Coping with Statistical Correctness
\end_layout

\begin_layout Standard
The protocol we showed used the perfect correctness of 
\begin_inset Formula $\Pi_{f}$
\end_inset

 .
 
\end_layout

\begin_layout Paragraph*
How? 
\end_layout

\begin_layout Standard
if the correctness is not perfect there is probability that some of the
 players will output 0 is positive and an unbounded malices prover can choose
 randomness which will cause error.
 Note that for completeness it doesn't matter because it happen only with
 negligible probability we can achieve perfect completeness by just adding
 that if the invocation of 
\begin_inset Formula $\Pi_{f}$
\end_inset

 produced incorrect output the prover will send 
\begin_inset Formula $w$
\end_inset

 to the verifier.
 Since it happen only with neg prob the zero knowledge property will not
 be affected.
 
\end_layout

\begin_layout Paragraph*
Now 
\end_layout

\begin_layout Standard
we want to adjust the protocol to use only statistically correct 
\begin_inset Formula $\Pi_{f}$
\end_inset

 (i.e.
 the probability that some player will output value different from the others
 is 
\emph on
neg
\emph default
).
 The idea is not giving the prover to choose the randomness.
 
\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout

\series bold
Zero-Knowledge proof 
\begin_inset Formula $\Pi_{R}$
\end_inset

 in the commitment-hybrid model
\end_layout

\begin_layout Enumerate
The prover picks at random 
\begin_inset Formula $w_{1},...,w_{n}\in\{0,1\}^{m}$
\end_inset

such that 
\begin_inset Formula $w_{1}\oplus...\oplus w_{n}=w$
\end_inset

.
 She separately commits to each input 
\begin_inset Formula $w_{i}$
\end_inset

 as to 
\emph on
n 
\emph default
random strings 
\begin_inset Formula $r_{1}^{P},...,r_{n}^{P}$
\end_inset

 where each 
\begin_inset Formula $r_{i}^{P}$
\end_inset

 is of the same length as the random input of 
\begin_inset Formula $P_{i}$
\end_inset

 in 
\begin_inset Formula $\Pi_{f}$
\end_inset

.
\end_layout

\begin_layout Enumerate
Verifier send to the prover 
\emph on
n 
\emph default
random strings 
\begin_inset Formula $r_{1}^{V},...,r_{n}^{V}$
\end_inset

 where 
\begin_inset Formula $|r_{i}^{V}|=|r_{i}^{P}|$
\end_inset

.
\end_layout

\begin_layout Enumerate
Prover emulate the execution of 
\begin_inset Formula $\Pi_{f}$
\end_inset

 on input 
\begin_inset Formula $(x,w_{1},...,w_{n})$
\end_inset

 using randomness 
\begin_inset Formula $r_{i}=r_{i}^{P}\oplus r_{i}^{V}$
\end_inset

 for each player 
\begin_inset Formula $P_{i}$
\end_inset

.
 Then the prover commit the view 
\begin_inset Formula $V_{1},...,V_{n}$
\end_inset

 of this execution.
 
\end_layout

\begin_layout Enumerate
Verifier picks at random 
\begin_inset Formula $i,j\in[n]$
\end_inset

 and sends them to the prover.
\end_layout

\begin_layout Enumerate
Prover 
\begin_inset Quotes eld
\end_inset

opens
\begin_inset Quotes erd
\end_inset

 the commitments of 
\begin_inset Formula $V_{i},V_{j}$
\end_inset

 as well as the corresponding committed inputs 
\begin_inset Formula $w_{i},w_{j}$
\end_inset

 and her share of the randomness 
\begin_inset Formula $r_{i}^{P},r_{j}^{P}$
\end_inset


\end_layout

\begin_layout Enumerate
Verifier accepts if and only if:
\end_layout

\begin_deeper
\begin_layout Enumerate
all the decommitments are successful 
\end_layout

\begin_layout Enumerate
the outputs of both 
\begin_inset Formula $P_{i}$
\end_inset

 and 
\begin_inset Formula $P_{j}$
\end_inset

 (which are determined by the views) are 1
\end_layout

\begin_layout Enumerate
the two opened views are 
\emph on
consistent
\emph default
 with each other and with the opened inputs 
\begin_inset Formula $w_{i},w_{j}$
\end_inset

 and their random input satisfy 
\begin_inset Formula $r_{i}=r_{i}^{P}\oplus r_{i}^{V}$
\end_inset

 and 
\begin_inset Formula $r_{j}=r_{j}^{P}\oplus r_{j}^{V}$
\end_inset

.
\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Paragraph*
proof:
\end_layout

\begin_layout Paragraph*
completeness:
\end_layout

\begin_layout Standard
Like before the probability that the verifier reject in an interaction with
 honest prover is the same is the probability for error in 
\begin_inset Formula $\Pi_{f}$
\end_inset

, negligible in our case.
 We can achieve perfect completeness by letting the prover to send 
\begin_inset Formula $w$
\end_inset

 in case of incorrect invocation of 
\begin_inset Formula $\Pi_{f}$
\end_inset

.
 Because this is happen with negligible probability this doesn't affect
 zero-knowledge.
\end_layout

\begin_layout Paragraph*
soundness:
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $x$
\end_inset

 be such that 
\begin_inset Formula $R(x,w)=0\:\forall w$
\end_inset

.
 We show that the verifier rejects with at least 
\begin_inset Formula $\frac{1}{\binom{n}{2}}-\delta(k)$
\end_inset

 probability for some negligible function 
\begin_inset Formula $\delta(\cdot)$
\end_inset

.
 Assume without loss of generality that the prover always opens the commitments
 and finish the protocol (otherwise the verifier will reject).
 Since the inputs 
\begin_inset Formula $w_{i}$
\end_inset

 as well as as the prover shares of the randomness 
\begin_inset Formula $r_{i}^{P}$
\end_inset

 are committed in step 1, we have that the effective randomness 
\begin_inset Formula $r_{i}=r_{i}^{P}\oplus r_{i}^{V}$
\end_inset

 determined is step 2 are independent of the inputs 
\begin_inset Formula $w_{i}$
\end_inset

.
 Now, we can look at all the cases:
\end_layout

\begin_layout Itemize
the input and the randomness lead some player in an honest execution of
 
\begin_inset Formula $\Pi_{f}$
\end_inset

 to incorrectly output 1.
 This can happen only with negligible probability.
 
\end_layout

\begin_layout Itemize
otherwise (all player output 0).
 We have two sub-cases:
\end_layout

\begin_deeper
\begin_layout Itemize
The views committed in step 3 are obtained by honestly running 
\begin_inset Formula $\Pi_{f}$
\end_inset

 with the inputs 
\begin_inset Formula $w_{i}$
\end_inset

 and the randomness 
\begin_inset Formula $r_{i}$
\end_inset

.
 In this case all views imply output 0 and the verifier reject
\end_layout

\begin_layout Itemize
Otherwise, either the input of some view is different from 
\begin_inset Formula $w_{i}$
\end_inset

, or the randomness different from 
\begin_inset Formula $r_{i}$
\end_inset

 or we have pair with inconsistent views.
 Either way, an inconsistency will be detected with at least 
\begin_inset Formula $\frac{1}{\binom{n}{2}}$
\end_inset

 probability.
\end_layout

\end_deeper
\begin_layout Standard
Overall, the verifier rejection probability is at least 
\begin_inset Formula $\frac{1}{\binom{n}{2}}-\delta(k)$
\end_inset

 where 
\begin_inset Formula $\delta$
\end_inset

 is the error probability of 
\begin_inset Formula $\Pi_{f}$
\end_inset

.
 
\end_layout

\begin_layout Paragraph*
Zero-Knowledge:
\end_layout

\begin_layout Standard
Let 
\emph on
Sim 
\emph default
be the simulator we have from the 2-privacy of 
\begin_inset Formula $\Pi_{f}$
\end_inset

.
 We will describe simulator 
\emph on
S 
\emph default
of dishonest verifier 
\begin_inset Formula $V^{*}$
\end_inset


\emph on
.
 
\emph default
On input 
\begin_inset Formula $(k,x):$
\end_inset


\end_layout

\begin_layout Enumerate
Run 
\begin_inset Formula $V^{*}$
\end_inset

 on input 
\begin_inset Formula $(k,x)$
\end_inset

.
 Let 
\begin_inset Formula $r_{1}^{V^{*}},...,r_{n}^{V^{*}}$
\end_inset

be the strings sent by 
\begin_inset Formula $V^{*}$
\end_inset

 in step 2 and 
\begin_inset Formula $i,j$
\end_inset

 be the pair of indices sent in step 4.
\end_layout

\begin_layout Enumerate
Pick random 
\begin_inset Formula $w_{i},w_{j}$
\end_inset

 and run 
\begin_inset Formula $Sim(k,\{i,j\},x,(w_{i},w_{j}),1)$
\end_inset

 to simulate the pair of views 
\begin_inset Formula $(V_{i},V_{j})$
\end_inset

.
 Let 
\begin_inset Formula $r_{i},r_{j}$
\end_inset

 be the pair of random inputs contained in the simulated views.
 
\end_layout

\begin_layout Enumerate
Use the above 
\begin_inset Formula $w_{i},w_{j},V_{i},V_{j}$
\end_inset

 and 
\begin_inset Formula $r_{i}^{P}=r_{i}\oplus r_{i}^{V^{*}},r_{j}^{P}=r_{j}\oplus r_{j}^{V^{*}}$
\end_inset

 to simulate the prover decommitments in step 5.
 
\end_layout

\begin_layout Standard
The correctness of 
\emph on
S 
\emph default
is similar to the case where 
\begin_inset Formula $\Pi_{f}$
\end_inset

 is perfect correct.
 The only different is that now random inputs 
\begin_inset Formula $r_{i}$
\end_inset

 used by the prover for running 
\begin_inset Formula $\Pi_{f}$
\end_inset

 are generated jointly with 
\begin_inset Formula $V^{*}$
\end_inset

.
 But since the prover's share of randomness 
\begin_inset Formula $r_{i}^{P}$
\end_inset

 are independent of the verifier's share 
\begin_inset Formula $r_{i}^{V^{*}}$
\end_inset

, the views 
\begin_inset Formula $(V_{i},V_{j})$
\end_inset

 sent in step 5 are indistinguishable from the output of 
\begin_inset Formula $Sim(k,\{i,j\},x,(w_{i},w_{j}),1)$
\end_inset

 even when conditioning on the randomness of 
\begin_inset Formula $V^{*}$
\end_inset

.
\end_layout

\begin_layout Section*
4.
 Zero-knowledge from MPC in the Malicious Model.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-1"

\end_inset

O.
 Goldreich, S.
 Micali, and A.
 Widgerson.
 How to Prove all NP-Statements in Zero-Knowledge, and a Methodology of
 Cryptographic Protocol Design, In CRYPTO 1986, pages 171-185.
 
\end_layout

\end_body
\end_document
